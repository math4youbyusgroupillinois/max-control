#!/usr/bin/env python
# -*- coding: UTF-8 -*-

import sys
import os
import getopt
import glob
import commands



def read_conf(varname):
    f=open(CONF, 'r')
    data=f.readlines()
    f.close()
    
    for line in data:
        if line.startswith('define') and varname in line:
            return line.split('"')[3]
    return ''

CONF="/etc/max-control/conf.inc.php"
ISOS_PATH=read_conf('ISOS_PATH')


def humansize(size):
    SUFFIX = ['KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']
    if size < 0:
        return ""

    multiply = 1000
    for suffix in SUFFIX:
        size /= multiply
        if size < multiply:
            return "{0:.2f} {1}".format(size, suffix)

    return 'infinito'

def getISOInfo(fname):
    """
    isoinfo -d -i ubuntu-10.04-desktop-i386.iso 
CD-ROM is in ISO 9660 format
System id: LINUX
Volume id: Ubuntu 10.04 LTS i386
Volume set id: 
Publisher id: 
Data preparer id: 
Application id: GENISOIMAGE ISO 9660/HFS FILESYSTEM CREATOR (C) 1993 E.YOUNGDALE (C) 1997-2006 J.PEARSON/J.SCHILLING (C) 2006-2007 CDRKIT TEAM
Copyright File id: 
Abstract File id: 
Bibliographic File id: 
Volume set size is: 1
Volume set sequence number is: 1
Logical block size is: 2048
Volume size is: 358115
El Torito VD version 1 found, boot catalog is in sector 151
Joliet with UCS level 3 found
Rock Ridge signatures version 1 found
Eltorito validation header:
    Hid 1
    Arch 0 (x86)
    ID ''
    Key 55 AA
    Eltorito defaultboot header:
        Bootid 88 (bootable)
        Boot media 0 (No Emulation Boot)
        Load segment 0
        Sys type 0
        Nsect 4
        Bootoff 8F 143

    """
    volid=''
    result = commands.getoutput("isoinfo -d -i %s"%fname).split('\n')
    for line in result:
        if "Volume id:" in line:
            volid=line.split(':')[1].strip()
    size=os.stat(fname)[6]
    return (os.path.basename(fname),humansize(size), volid)


def getISOS():
    for iso in glob.glob(ISOS_PATH + "*iso"):
        print "|".join(getISOInfo(iso))



try:
    OPTS, ARGS = getopt.getopt(sys.argv[1:], ":hg", ["help", "getisos"])
except getopt.error, msg:
    print (msg)
    print ("for command line options use pyboot --help")
    sys.exit(2)


for o, a in OPTS:
    if o in ("-h", "--help"):
        sys.exit()
    
    elif o in ("-g", "--getisos"):
        getISOS()
        sys.exit(0)
