#!/bin/sh
#
#
#
#


PROFILES_DIR="/home/samba/profiles/"
GROUPS_DIR="/home/samba/groups/"
SHARED_DIR="/home/samba/shares/"

LOCK_FILE="/var/lib/max-control/max-control-run.lock"
MAX_WAIT=20

WORKGROUP=$(dnsdomainname -d | awk -F"." '{print toupper($1)}')
HOMES_DIR="/home/${WORKGROUP}"

echo_exit(){
    echo $@
    exit 1
}

WAIT=0

max_control_need_wait() {
    while [ -f $LOCK_FILE ]; do
        sleep 1
        WAIT=$((WAIT+1))
        echo "max-control[$$]: waiting ($@)"
        if [ $WAIT -ge $MAX_WAIT ]; then
            #echo_exit "locked"
            rm -f $LOCK_FILE
        fi
    done
}

create_lock() {
    max_control_need_wait
    touch $LOCK_FILE
}



on_exit() {
    #echo "remove lock"
    rm -f $LOCK_FILE
}


trap on_exit EXIT
trap on_exit INT
trap on_exit QUIT
trap on_exit TERM

#touch $LOCK_FILE



case $1 in
    adduser)
        # username and surname
        NEWUSER=$2
        NAME=$3
        SURNAME=$4
        # password
        PASSWD=$5
        ROLE=$6
        USHELL=$7

        if wbinfo -i "$NEWUSER" >/dev/null 2>&1 ; then
            echo_exit "exists"
        fi

        create_lock

        if [ "${USHELL}" = "" ]; then
            USHELL="/bin/false"
        fi

        #DCNAME="$(samba-tool domain info 127.0.0.1 2>/dev/null| awk '/^DC name/ {print $4}')"
        # max-server.madrid.local
        DCNAME="$(dnsdomainname -f)"
        

        DRIVE="$(awk -F'"' '/drive/ {print $4}' /var/lib/zentyal/conf/samba.bak 2>/dev/null| tail -1)"
        # H:
        if [ "$DRIVE" = "" ]; then
            DRIVE='H:'
        fi

        LDAP_ADMIN="$(awk -F"'" '/LDAP_ADMIN/ {print $2}' /etc/max-control/conf.inc.php)"
        LDAP_PASSW="$(awk -F"'" '/LDAP_PASS/ {print $2}' /etc/max-control/conf.inc.php)"

        mkdir -p "${HOMES_DIR}"
        #set -x


        # echo samba-tool user add \
        #   "$NEWUSER" "$PASSWD" --use-username-as-cn --given-name="$NAME" --surname="$SURNAME" \
        #   -U"${LDAP_ADMIN}":"${LDAP_PASSW}" \
        #   --profile-path='\\\\'$DCNAME'\\profiles\\'$NEWUSER \
        #   --home-directory='\\\\'$DCNAME'\\'$NEWUSER \
        #   --home-drive="'$DRIVE'"

        # create local user
        #self.exe_cmd("useradd -m %s -p%s -s /bin/bash -d /home/%s" %(username, username, username))
        #self.exe_cmd("echo %s:%s | chpasswd" %(username, username))
        NEWUUID=$(max-get-newuser-uuid)

        useradd -m "$NEWUSER" -s "${USHELL}" -d "${HOMES_DIR}/$NEWUSER" --no-user-group --uid="${NEWUUID}" || echo_exit "error"
        echo "${NEWUSER}:${PASSWD}" | chpasswd
        chown -R "${NEWUSER}:Domain Users" "${HOMES_DIR}/$NEWUSER"
        chmod 700 "${HOMES_DIR}/$NEWUSER"


        samba-tool user create \
          "$NEWUSER" "$PASSWD" --use-username-as-cn --given-name="$NAME" --surname="$SURNAME" \
          -U"${LDAP_ADMIN}":"${LDAP_PASSW}" \
          --profile-path='\\'$DCNAME'\profiles\'$NEWUSER \
          --home-directory='\\'$DCNAME'\'$NEWUSER \
          --home-drive="$DRIVE" \
          --rfc2307-from-nss --gecos "$NAME $SURNAME" \
          --uid="$NEWUSER" --uid-number="${NEWUUID}" --login-shell="${USHELL}" || echo_exit "error"


        #ldbsearch -H /opt/samba4/private/sam.ldb '(cn=aaa9)'

        #NEWUUID=$(wbinfo --sid-to-uid `wbinfo --name-to-sid $NEWUSER | awk '{print $1}'`)
        # NEWUUID=$(wbinfo -n $NEWUSER| awk -F" |\-" '{print $8}')
        # NEWUUID=$((NEWUUID+50000))
        #echo "NEWUUID=$NEWUUID"
        NEWUUID=$(id -u "$NEWUSER")

        mkdir -p "${PROFILES_DIR}/${NEWUSER}"
        chown "${NEWUUID}":"Domain Users" "${PROFILES_DIR}/${NEWUSER}"
        chmod 700 "${PROFILES_DIR}/${NEWUSER}"

        setfacl -b "${PROFILES_DIR}/${NEWUSER}"    2>&1
        setfacl -R -m u:root:rwx,g::---,g:"Domain Users":---,u:${NEWUUID}:rwx "${PROFILES_DIR}/${NEWUSER}" 2>&1
        setfacl -R -m d:u:root:rwx,g::---,g:"Domain Users":---,u:${NEWUUID}:rwx "${PROFILES_DIR}/${NEWUSER}" 2>&1


        QUOTA=$(max-control getdefaultquota)
        case $ROLE in
            admin)
                QUOTA=$((QUOTA*2))
                samba-tool group addmembers "Administrators" "$NEWUSER"
                samba-tool group addmembers "Group Policy Creator Owners" "$NEWUSER"
                samba-tool group addmembers "Enterprise Admins" "$NEWUSER"
                samba-tool group addmembers "Schema Admins" "$NEWUSER"
                samba-tool group addmembers "Domain Admins" "$NEWUSER"
            ;;
            teacher)
                QUOTA=$((QUOTA*2))
                samba-tool group addmembers "Teachers" "$NEWUSER"
            ;;
            tic)
                samba-tool group addmembers "CoordinadoresTIC" "$NEWUSER"
            ;;
        esac
        /usr/bin/edit.quotas --set --user="${NEWUUID}" --size="$QUOTA" >/dev/null 2>&1

        
        echo 'OK'
        exit 0




        


        # my @cmds = ();
        # # Create the directory if it does not exist
        # push (@cmds, "mkdir -p \'$path\'") unless -d $path;


        # # Set unix permissions on directory
        # push (@cmds, "chown $samAccountName:$group \'$path\'");
        # push (@cmds, "chmod 0700 \'$path\'");

        # # Set native NT permissions on directory
        # my @perms;
        # push (@perms, 'u:root:rwx');
        # push (@perms, 'g::---');
        # push (@perms, "g:$group:---");
        # push (@perms, "u:$samAccountName:rwx");
        # push (@cmds, "setfacl -b \'$path\'");
        # push (@cmds, 'setfacl -R -m ' . join(',', @perms) . " \'$path\'");
        # push (@cmds, 'setfacl -R -m d:' . join(',d:', @perms) ." \'$path\'");
        # EBox::Sudo::root(@cmds);






        # mkdir -p "$HOMES_DIR/${NEWUSER}"
        # chown "${NEWUSER}":"Domain Users" "${HOMES_DIR}/${NEWUSER}"
        # chmod 701 "${HOMES_DIR}/${NEWUSER}"

        # # profile
        # mkdir -p "${PROFILES_DIR}/${NEWUSER}"
        # chown "${NEWUSER}":"Domain Users" "${PROFILES_DIR}/${NEWUSER}"
        # chmod 701 "${PROFILES_DIR}/${NEWUSER}"

        # #mkdir -p "${PROFILES_DIR}/${NEWUSER}.V2"
        # #chown "${NEWUSER}":"Domain Users" "${PROFILES_DIR}/${NEWUSER}.V2"
        # #chmod 701 "${PROFILES_DIR}/${NEWUSER}.V2"

        # if id "$NEWUSER" 2>/dev/null | grep -q -e Teachers -e "Domain Admins"; then
        #     QUOTA=$((QUOTA*2))
        # fi


        # # set quota
        # #/usr/share/ebox-samba/ebox-samba-quota -s ${NEWUSER} ${QUOTA}
        # /usr/bin/edit.quotas --set --user="${NEWUSER}" --size=${QUOTA}
        exit 0
        ;;

################################################################################
    chshell)
        # shell and username
        USHELL=$2
        USER=$3

        create_lock

        usermod --shell "${USHELL}" "${USER}" && echo 'OK'
        exit 0
        ;;
################################################################################
    chpasswd)
        # username and surname
        USER=$2
        PASS=$3

        create_lock

        echo "${USER}:${PASS}" | chpasswd
        samba-tool user setpassword "${USER}" --newpassword="${PASS}" >/dev/null 2>&1 && echo 'OK'
        exit 0
        ;;
################################################################################
    deluser)
        # username and surname
        DELUSER=$2

        create_lock

        samba-tool user delete "$DELUSER" >/dev/null 2>&1 && echo 'OK'
        deluser "$DELUSER" >/dev/null 2>&1
        exit 0
        ;;
################################################################################
    addcomputer)
        # username and surname
        NAME="$(echo $2| tr '[:lower:]' '[:upper:]')"
        IP=$3

        # listar todos los registros DNS
        # host -t A -l madrid.local


        DN="$(dnsdomainname)"
        LDAP_ADMIN="$(awk -F"'" '/LDAP_ADMIN/ {print $2}' /etc/max-control/conf.inc.php)"
        LDAP_PASSW="$(awk -F"'" '/LDAP_PASS/ {print $2}' /etc/max-control/conf.inc.php)"

        echo samba-tool dns add 127.0.0.1 ${DN} ${NAME} A ${IP} -U${LDAP_ADMIN}:${LDAP_PASSW}

        exit 0
        ;;
################################################################################
    addaula)
        NEW=$2
        DESC=$3

        create_lock


        samba-tool group add "$NEW" \
                   --groupou=CN=Computers \
                   --group-scope=Domain \
                   --group-type=Security \
                   --description="$DESC" 2>&1 && echo 'OK'
        exit 0
        ;;
################################################################################
    delaula)
        DEL=$2
        
        create_lock


        samba-tool group delete "$DEL" 2>&1 && echo 'OK'
        exit 0
        ;;
################################################################################
    delmember)
        # username and surname
        GROUP=$2
        MEMBER=$3

        create_lock

        samba-tool group removemembers "$GROUP" "$MEMBER" >/dev/null 2>&1 && echo 'OK'
        exit 0
        ;;
################################################################################
    addmember)
        # username and surname
        GROUP=$2
        MEMBER=$3

        create_lock

        samba-tool group addmembers "$GROUP" "$MEMBER" >/dev/null 2>&1 && echo 'OK'
        exit 0
        ;;
################################################################################
    rights)
        # username
        RUSER=$2
        # password
        ROLE=$3

        case $ROLE in
            admin)
                samba-tool group addmembers "Administrators" "$RUSER"
                samba-tool group addmembers "Group Policy Creator Owners" "$RUSER"
                samba-tool group addmembers "Enterprise Admins" "$RUSER"
                samba-tool group addmembers "Schema Admins" "$RUSER"
                samba-tool group addmembers "Domain Admins" "$RUSER"
                samba-tool group addmembers "Instaladores" "$RUSER"

                # no tic
                samba-tool group removemembers "CoordinadoresTIC" "$RUSER"
                # no teacher
                samba-tool group removemembers "Teachers" "$RUSER"
            ;;

            tic)
                samba-tool group addmembers "CoordinadoresTIC" "$RUSER"
                # no admin
                samba-tool group removemembers "Administrators" "$RUSER"
                samba-tool group removemembers "Group Policy Creator Owners" "$RUSER"
                samba-tool group removemembers "Enterprise Admins" "$RUSER"
                samba-tool group removemembers "Schema Admins" "$RUSER"
                samba-tool group removemembers "Domain Admins" "$RUSER"
                samba-tool group removemembers "Instaladores" "$RUSER"
                # no teacher
                samba-tool group removemembers "Teachers" "$RUSER"
            ;;

            teacher)
                samba-tool group addmembers "Teachers" "$RUSER"

                # no admin
                samba-tool group removemembers "Administrators" "$RUSER"
                samba-tool group removemembers "Group Policy Creator Owners" "$RUSER"
                samba-tool group removemembers "Enterprise Admins" "$RUSER"
                samba-tool group removemembers "Schema Admins" "$RUSER"
                samba-tool group removemembers "Domain Admins" "$RUSER"
                samba-tool group removemembers "Instaladores" "$RUSER"
                # no tic
                samba-tool group removemembers "CoordinadoresTIC" "$RUSER"
            ;;

            *)
                #alumno

                # no admin
                samba-tool group removemembers "Administrators" "$RUSER"
                samba-tool group removemembers "Group Policy Creator Owners" "$RUSER"
                samba-tool group removemembers "Enterprise Admins" "$RUSER"
                samba-tool group removemembers "Schema Admins" "$RUSER"
                samba-tool group removemembers "Domain Admins" "$RUSER"
                samba-tool group removemembers "Instaladores" "$RUSER"
                # no tic
                samba-tool group removemembers "CoordinadoresTIC" "$RUSER"
                # no teacher
                samba-tool group removemembers "Teachers" "$RUSER"
            ;;
        esac


        exit 0
        ;;
################################################################################
    createhome)
        # username
        NEWUSER=$2
        # quota in MB
        QUOTA=$3
        # mkdir -p "$HOMES_DIR/${NEWUSER}"
        # chown "${NEWUSER}":"Domain Users" "${HOMES_DIR}/${NEWUSER}"
        # chmod 700 "${HOMES_DIR}/${NEWUSER}"

        # profile
        mkdir -p "${PROFILES_DIR}/${NEWUSER}"
        chown "${NEWUSER}":"Domain Users" "${PROFILES_DIR}/${NEWUSER}"
        chmod 700 "${PROFILES_DIR}/${NEWUSER}"

        #mkdir -p "${PROFILES_DIR}/${NEWUSER}.V2"
        #chown "${NEWUSER}":"Domain Users" "${PROFILES_DIR}/${NEWUSER}.V2"
        #chmod 701 "${PROFILES_DIR}/${NEWUSER}.V2"

        if id "$NEWUSER" 2>/dev/null | grep -q -e Teachers -e "Domain Admins"; then
            QUOTA=$((QUOTA*2))
        fi


        # set quota
        #/usr/share/ebox-samba/ebox-samba-quota -s ${NEWUSER} ${QUOTA}
        /usr/bin/edit.quotas --set --user="${NEWUSER}" --size=${QUOTA}
        exit 0
        ;;
################################################################################
    requota)
        NEWUSER=$2
        QUOTA=$3

        create_lock

        if id "$NEWUSER" 2>/dev/null | grep -q -e Teachers -e "Domain Admins"; then
            QUOTA=$((QUOTA*2))
        fi
        # set quota
        #/usr/share/ebox-samba/ebox-samba-quota -s ${NEWUSER} ${QUOTA}
        /usr/bin/edit.quotas --set --user="${NEWUSER}" --size=${QUOTA}
        exit 0
        ;;
################################################################################
    recache)
        if [ -e /var/lib/max-control/quota.cache.php.new ]; then
            # exit if updating quotas
            exit 0
        fi
        if [ -x /usr/bin/pyoverquota ]; then
            pyoverquota >> /var/log/max-control-pxe.log 2>&1
        fi
        exit 0
        ;;
################################################################################
    deleteprofile)
        DELUSER=$2
        [ "${DELUSER}" = "" ] && echo_exit "nonexists"
        rm -rf "$HOMES_DIR/${DELUSER}"
        rm -rf "$PROFILES_DIR/${DELUSER}"
        #rm -rf "$PROFILES_DIR/${DELUSER}.V2"
        echo "ok"
        exit 0
        ;;
################################################################################
    resetprofile)
        DELUSER=$2
        [ "${DELUSER}" = "" ] && echo_exit "nonexists"
        #rm -rf "$HOMES_DIR/${DELUSER}" "$PROFILES_DIR/${DELUSER}" "$PROFILES_DIR/${DELUSER}.V2" 2>/dev/null
        #mkdir -p "$HOMES_DIR/${DELUSER}" "$PROFILES_DIR/${DELUSER}" "$PROFILES_DIR/${DELUSER}.V2" 2>/dev/null
        rm -rf "$HOMES_DIR/${DELUSER}" "$PROFILES_DIR/${DELUSER}" 2>/dev/null
        mkdir -p "$HOMES_DIR/${DELUSER}" "$PROFILES_DIR/${DELUSER}" 2>/dev/null

        # arreglar permisos
        chown "${DELUSER}":"Domain Users" "${HOMES_DIR}/${DELUSER}"
        chmod 700 "${HOMES_DIR}/${DELUSER}"
        chown "${DELUSER}":"Domain Users" "${PROFILES_DIR}/${DELUSER}"
        chmod 700 "${PROFILES_DIR}/${DELUSER}"
        #chown "${DELUSER}":Domain\ Users "${PROFILES_DIR}/${DELUSER}.V2"
        #chmod 701 "${PROFILES_DIR}/${DELUSER}.V2"
        exit 0
        ;;
################################################################################
    addgroup)
        ADDGROUP=$2
        READONLY=$3
        DESC=$4

        create_lock

        [ "${ADDGROUP}" = "" ] && echo_exit "nonexists"

        getent group "$ADDGROUP" >/dev/null && echo_exit "exists"
        
        if ! samba-tool group add "$ADDGROUP" \
                        --groupou=CN=Users \
                        --group-scope=Global \
                        --group-type=Security \
                        --description="$DESC" 2>&1; then
            echo 'error'
            exit
        fi

        mkdir -p "${GROUPS_DIR}/${ADDGROUP}"
        chown root:"${ADDGROUP}" "${GROUPS_DIR}/${ADDGROUP}"
        chmod +t "${GROUPS_DIR}/${ADDGROUP}"
        chmod g+w "${GROUPS_DIR}/${ADDGROUP}"
        [ "$READONLY" = "1" ] && chmod o-r "${GROUPS_DIR}/${ADDGROUP}"
        echo "ok"
        exit 0
        ;;
################################################################################
    isreadonly)
        # $2 is groupname
        # readonly (for puppils) is read from st_mode
        #    * 17405 readonly 0
        #    * 17401 readonly 1
        #
        ST_MODE=$(python -c 'import os,sys; print os.stat(sys.argv[1]).st_mode' "${GROUPS_DIR}/${2}" 2>&1)
        if [ "$ST_MODE" = "17401" ]; then
            echo "1"
        else
            echo "0"
        fi
        exit
        ;;
################################################################################
    deletegroup)
        DELGROUP=$2
        DELDIR=$3
        [ "${DELGROUP}" = "" ] && echo_exit "nonexists"

        samba-tool group delete "${DELGROUP}"

        if [ "$DELDIR" = "1" ]; then
            rm -rf "$GROUPS_DIR/${DELGROUP}"
        fi

        echo "ok"
        exit 0
        ;;
################################################################################
    getdefaultquota)
        #DEF=$(grep '"userquota_size"' /var/lib/ebox/gconf/ebox/modules/samba/GeneralSettings/%gconf.xml 2>/dev/null | awk -F '"' '{print $8}')
        DEF=$(/usr/share/max-control/getDefaultQuota.pm 2>/dev/null)

        if [ "$DEF" = "" ]; then
            echo 2000
        else
            echo $DEF
        fi
        exit 0
        ;;
################################################################################
    getquota)
        /usr/bin/edit.quotas --getused --user=$2  
        exit 0
        ;;
################################################################################
    getdomainsid)
        net getdomainsid
        exit 0
        ;;
################################################################################
    genlogonshares)
        #pygenlogonshares 'ou=Groups,dc=max-server'
        pygenlogonshares
        unix2dos /home/samba/netlogon/shares.kix >/dev/null 2>&1
        echo "ok"
        exit 0
        ;;
################################################################################
    gensamba)
        pymaxgensamba 2>&1
        echo "ok"
        exit 0
        ;;
################################################################################
    pxe)
        args=$@
        ARGS=${args##pxe}
        pyboot ${ARGS}
        exit 0
        ;;
################################################################################
    isos)
        args=$@
        ARGS=${args##isos}
        pyisos ${ARGS}
        exit 0
        ;;
################################################################################
    delcomputer)
        smbpasswd -x "$2" 2>&1
        exit 0
        ;;
################################################################################
    reloadsamba)
        if testparm -s /etc/samba/smb.conf >/dev/null 2>&1; then
            PIDS=$(pidof smbd)
            for pid in $PIDS; do
                kill -1 $pid
            done
            exit 0
        else
            exit 1
        fi
        ;;
################################################################################
    createshared)
        ADDGROUP=$2
        GROUP=$3
        [ "${ADDGROUP}" = "" ] && echo_exit "nonexists"
        mkdir -p "${SHARED_DIR}/${ADDGROUP}"
        chown root:"${GROUP}" "${SHARED_DIR}/${ADDGROUP}"
        chmod 0775 "${SHARED_DIR}/${ADDGROUP}"
        echo "ok"
        exit 0
        ;;
################################################################################
#    purgewins)
#        /etc/init.d/ebox samba stop
#        rm -f /var/lib/samba/wins.tdb /var/lib/samba/wins.dat
#        /etc/init.d/ebox samba start
#        exit 0
#        ;;
################################################################################
    renamegroup)
        # $2 is oldname
        # $3 is newname
        if [ -d "$GROUPS_DIR/$3" ]; then
            echo "new exists"
            exit 0
        elif [ -d "$GROUPS_DIR/$2" ]; then
            mv "$GROUPS_DIR/$2" "$GROUPS_DIR/$3"
            rm -f /etc/samba/max-control.conf
            pymaxgensamba >/dev/null 2>&1
            echo "ok"
            exit 0
        fi
        echo "no changes"
        exit 0
        ;;
################################################################################
    *)
        echo "unknow_action"
        exit 0
    ;;
esac



