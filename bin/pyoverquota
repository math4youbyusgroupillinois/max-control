#!/usr/bin/env python
# -*- coding: UTF-8 -*-

import ldap
import os
import sys
#import glob
import time
from subprocess import Popen, PIPE, STDOUT

os.environ['LC_ALL']="C"
os.environ['EDITOR']="/bin/cat"

HOME="/home"
REMOTE="/dev/nbd0"
CONF="/etc/max-control/conf.inc.php"
LIMIT=float(80) #percent

if not os.path.isfile(CONF):
    #print " * No existe el archivo %s"%CONF
    sys.exit(0)

if os.path.isfile("/home/samba/aquota.user") or os.path.isfile("/home/samba/quota.user"):
    HOME="/home/samba"

if not os.path.isfile(HOME + "/aquota.user") and not os.path.isfile(HOME + "/quota.user"):
    #print " * No quotas found"
    sys.exit(0)


def read_conf(varname):
    f=open(CONF, 'r')
    data=f.readlines()
    f.close()
    
    for line in data:
        if line.startswith('define') and varname in line:
            if len(line.split('"')) >= 3:
                return line.split('"')[3]
            if len(line.split("'")) >= 3:
                return line.split("'")[3]
    return ''

CONF_LIMIT=read_conf("OVERQUOTA_LIMIT")
if CONF_LIMIT != '':
    LIMIT=float(CONF_LIMIT)

def getQuota(user, used=False):
    """
    LC_ALL=C edquota -u profesorpruebas -f /home
    Disk quotas for user profesorpruebas (uid 2050):
      Filesystem          blocks       soft       hard     inodes     soft     hard
      /dev/nbd0               12    2048000    2048000          3        0        0
    """
    column=2
    percent=""
    if used:
        column=1
    size=0
    cmd="edquota -u %s -f %s 2>/dev/null"%(user, HOME)
    p = Popen(cmd, shell=True, bufsize=0, stdout=PIPE, stderr=STDOUT, close_fds=True)
    stdout = p.stdout
    for line in stdout.readlines():
        if line != '\n':
            line=line.replace('\n', '')
            #print "==>%s"%line
            if REMOTE in line:
                size=line.split()[column]
                if used:
                    if int(line.split()[2]) == 0:
                        return (False, 0, 0, 0)
                    #print "==>%s"%line
                    percent=float(line.split()[1])/float(line.split()[2])*100
                    #print "percent(%s)=%s/%s/100" %(percent, line.split()[1], line.split()[2])
                    #print "\n\n"
                    size=int(size)/1024
                    maxsize=int(line.split()[2])/1024
                    overquota=False
                    #print "%s %s > %s"%(user, percent,LIMIT)
                    if percent > LIMIT:
                        overquota=True
                    return (overquota, size, maxsize, "%0.2f%%"%percent)
    return (False, 0, 0, 0)


def generateOverQuotas():
    l = ldap.initialize('ldap://localhost:389')
    allusers = l.search_s(read_conf("LDAP_OU_USERS"),ldap.SCOPE_SUBTREE,'(uid=*)',['uid'])
    
    users = {}

    for a in allusers:
        uid=a[1]['uid'][0]
        (overquota, size, maxsize, percent)=getQuota(uid, True)
        
        print """$quotaArray['%s']=array('size'=>%s, 'maxsize'=> %s, 'percent'=>'%s', 'overQuota'=>%s);"""\
                            %(uid,size,maxsize,percent, overquota)
        
        if overquota:
            print "$overQuota[]=array('uid'=>'%s', 'size'=>%s, 'maxsize'=> %s, 'percent'=>'%s');"%(uid,size,maxsize,percent)
        #else:
        #    print "/*%20s => no overquota */"%(uid)


print """<?php

/* generated by pyoverquota on: "%s" 
*
*  OVERQUOTA_LIMIT=%s%%
*/

$quotaTime="%s";
$overQuota=array();
$quotaArray=array();

"""%(time.asctime(), LIMIT, time.strftime("%d/%m/%Y %H:%M:%S", time.localtime()))
generateOverQuotas()

print """

?>"""
